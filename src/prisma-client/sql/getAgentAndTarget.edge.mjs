import { makeTypedQueryFactory as $mkFactory } from "../runtime/edge.js"
export const getAgentAndTarget = /*#__PURE__*/ $mkFactory("SELECT\n\"Agent\".id AS agent_id,\n\"Agent\".name AS name,\nlocation,\nstatus,\narch,\ncores,\nlogical_cpus,\nos,\nos_version,\nprocessor,\nram_gb,\nt.id AS target_id,\nroot,\nskip_completed,\nmax_workers,\nmem_thresh,\nt.use_history AS use_history,\ndefault_timeout,\ns.id AS scan_id,\ns.root_path AS scan_root_path,\ns.start_time AS scan_start_time,\ns.end_time AS scan_end_time,\nmatches,\ntimeouts,\ngigs_per_second,\n(SELECT COUNT(*) FROM \"ScanError\" WHERE s.\"id\" = \"ScanError\".\"scanId\")::INT AS scan_errors,\nc.id AS crawl_id,\nc.root_path AS crawl_root_path,\nc.start_time AS crawl_start_time,\nc.end_time AS crawl_end_time,\nfile_count,\ndir_count,\ntotal_size,\nscan_size AS crawl_scan_size,\nlargest_file_size,\nlargest_file_path,\nthroughput,\nc.use_history AS crawl_used_history,\n(SELECT COUNT(*) FROM \"CrawlError\" WHERE c.\"id\" = \"CrawlError\".\"crawlId\")::INT AS crawl_errors\nFROM \"Agent\"\nLEFT JOIN \"AgentsToTarget\" att ON \"Agent\".id = \"agentId\"\nJOIN \"Target\" t ON t.id = att.\"targetId\"\nLEFT JOIN\n(SELECT *, row_number() OVER (PARTITION BY \"targetId\" ORDER BY targeted_date DESC) rn FROM \"Crawl\") c\nON t.id = c.\"targetId\" AND rn = 1\nLEFT JOIN \"Scan\" s ON s.\"targetId\" = t.id AND s.result_folder = c.result_folder\nWHERE \"Agent\".\"id\" = $1 OR $1 = ''")
